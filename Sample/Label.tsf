//////////////////////////////////////////////////////////////////////
//																	//
//		Label.tsf	Sample Script for ComScrp Library				//
//		Goto/Gosub Command Sample									//
//																	//
//				Copyright Takahiro Ito, 2003/02/23 - 2003/02/24		//
//////////////////////////////////////////////////////////////////////

/*
	このサンプルは、制御構文について説明しています。
	制御構文はおもに３種類に分かれます。
	　１つ目は、無条件にスクリプトの流れを変える
	goto,gosub,return命令。
	　２つ目は、条件付でスクリプトの流れを変えるif命令。
	このif命令は現在、単純形しか取れませんが、構造化が検討されています。
	　３つ目は、Func.tsfでも出てきた関数呼び出しです。
	これはgotoなどと同じで、無条件にスクリプトの流れを変えますが、
	値を返せる、変数名が関数内でローカルなどの大きな違いがあります。
	関数呼び出しは、Func.tsfに譲るとして、このサンプルでは、
	goto,gosub,return,及びif命令を取り上げます。
*/

goto #label3;

#label1;
mes "通常は、このようなスクリプトを書いてはいけません。";
goto #label5;

#label2;
mes "テストのため、実行順序をでたらめに変えています。";
goto #label4;

#label3;
mes "これは、goto命令のテストです。";
goto #label2;

#label4;
mes "このようなスクリプトは非常に読みにくくなります";
goto #label1;

#label5;
mes "では、次に、gosub/returnの説明です。";

/*
	goto命令は、ただ単に実行の流れを変えるだけでした。
	それに対し、gosub命令は、実行する場所を変えた後、
	return命令を見つけると、元の場所に戻ってくることができます。
*/

goto #label7;

/*
	この部分がサブルーチンです。
*/
#label6;
	mes "Here is Subroutine.";
	return;

#label7;
/*
	先ほどのサブルーチンを呼び出してみます。
*/
	gosub #label6;
	gosub #label6;
	gosub #label6;

/*
	では、次に、if命令です。
	ifは、条件判断をして、その結果で実行を制御します。
	次のサブルーチンは、変数aの値が５の時は、
	"aの値が5です。"と表示し、それ以外の値なら、
	"aの値は5ではありません。"と表示します。
*/

	goto #label11;

#label8;
	int a;
	if (a == 5) then;
		mes "aの値が5です。";
	else;
		mes "aの値は5ではありません。";
	endif;
	return;

#label11;
	/*　aの値をいろいろ変えて、サブルーチンを呼び出してみます。 */
	a = 1;
	gosub #label8;

	a = 3;
	gosub #label8;

	a = 5;
	gosub #label8;

	a = 10;
	gosub #label8;

